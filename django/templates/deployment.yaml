apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "django.fullname" . }}
  labels:
    {{- include "django.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "django.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "django.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ include "django.fullname" . }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "django.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-makemigrations
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          command: ["sh", "-c", "./start.sh makemigrations"]
          env:
            {{- range $key, $value := .Values.envConfigs }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
        - name: init-migrate
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          command: ["sh", "-c", "./start.sh migrate"]
          env:
            {{- range $key, $value := .Values.envConfigs }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
        - name: init-update-permissions
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          command: ["sh", "-c", "./start.sh update_permissions"]
          env:
            {{- range $key, $value := .Values.envConfigs }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
        - name: init-run-managements
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          command: ["sh", "-c", "./start.sh run_managements"]
          env:
            {{- range $key, $value := .Values.envConfigs }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
        - name: init-superuser
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          command: ["sh", "-c", "./start.sh createsuperuser"]
          env:
            {{- range $key, $value := .Values.envConfigs }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c", "{{ .Values.command }}"]
          env:
            {{- range $key, $value := .Values.envConfigs }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          ports:
            - containerPort: {{ .Values.image.containerPort }}
              protocol: TCP
          volumeMounts:
            - name: shared
              mountPath: /srv/{{ .Values.data.staticfiles }}
            - name: shared
              mountPath: /srv/{{ .Values.data.data_media }}
      volumes:
        - name: shared
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
