apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "django.fullname" . }}
  labels:
    {{- include "django.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "django.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "django.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "django.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}


      initContainers:
        - name: {{ .Values.init.migrations.name | quote }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh"]
            args:
              - -c
              - >-
                  {{ .Values.init.migrations.command }}
          envFrom:
            - secretRef:
                name: env-secrets
            - configMapRef:
                name: env-configmap

        - name: {{ .Values.init.staticfiles.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args:
              - -c
              - >-
                  {{ .Values.init.staticfiles.command }}
          envFrom:
            - secretRef:
                name: env-secrets
            - configMapRef:
                name: env-configmap
          volumeMounts:
            - name: shared
              mountPath: {{ .Values.data.staticfiles }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .liveness.path }}
              port: {{ .Values.image.containerPort }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .readiness.path }}
              port: {{ .Values.image.containerPort }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        - name: {{ printf "%s-%s" .Chart.Name "proxy" }}
          image:  "{{ .Values.proxy.repository }}:{{ .Values.image.tag }}"
          ports:
            - name: http
              containerPort: {{ .Values.proxy.containerPort }}
              protocol: TCP
              
          volumeMounts:
            - name: caddy-config
              mountPath: /etc/caddy/Caddyfile
              subPath: Caddyfile
            - name: shared
              mountPath: {{ .Values.data.staticfiles }}
            - name: shared
              mountPath: {{ .Values.data.data_media }}
      volumes:
        - name: caddy-config
          configMap:
            name: caddy-config
        - name: shared
          emptyDir: {}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
